// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/adapterserver.proto

package service

import (
	context "context"
	entity "github.com/scjtqs2/bot_adapter/pb/entity"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_adapterserver_proto protoreflect.FileDescriptor

var file_proto_adapterserver_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xba, 0x29, 0x0a, 0x0e, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x19,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x0c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x13, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63,
	0x6b, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b,
	0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x6e, 0x12, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x58, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e,
	0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57,
	0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70,
	0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x5e, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x21, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x55, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4f, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x63, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x61, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x70, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x27, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x22,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6f, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x52,
	0x73, 0x70, 0x12, 0x49, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12, 0x67, 0x0a,
	0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x61, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x6e, 0x65,
	0x74, 0x73, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x18, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x55,
	0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x12,
	0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47,
	0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x47, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x14, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x6c, 0x79,
	0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x6c, 0x79, 0x52,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53,
	0x68, 0x6f, 0x77, 0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1d, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x55, 0x0a,
	0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x73, 0x70, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x6a, 0x74, 0x71, 0x73, 0x32, 0x2f, 0x62, 0x6f, 0x74,
	0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_proto_adapterserver_proto_goTypes = []interface{}{
	(*entity.SendPrivateMsgReq)(nil),               // 0: entity.SendPrivateMsgReq
	(*entity.SendGroupMsgReq)(nil),                 // 1: entity.SendGroupMsgReq
	(*entity.SendMsgReq)(nil),                      // 2: entity.SendMsgReq
	(*entity.DeleteMsgReq)(nil),                    // 3: entity.DeleteMsgReq
	(*entity.GetMsgReq)(nil),                       // 4: entity.GetMsgReq
	(*entity.GetForwardMsgReq)(nil),                // 5: entity.GetForwardMsgReq
	(*entity.SendLikeReq)(nil),                     // 6: entity.SendLikeReq
	(*entity.SetGroupKickReq)(nil),                 // 7: entity.SetGroupKickReq
	(*entity.SetGroupBanReq)(nil),                  // 8: entity.SetGroupBanReq
	(*entity.SetGroupAnonymousBanReq)(nil),         // 9: entity.SetGroupAnonymousBanReq
	(*entity.SetGroupWholeBanReq)(nil),             // 10: entity.SetGroupWholeBanReq
	(*entity.SetGroupAdminReq)(nil),                // 11: entity.SetGroupAdminReq
	(*entity.SetGroupAnonymousReq)(nil),            // 12: entity.SetGroupAnonymousReq
	(*entity.SetGroupCardReq)(nil),                 // 13: entity.SetGroupCardReq
	(*entity.SetGroupNameReq)(nil),                 // 14: entity.SetGroupNameReq
	(*entity.SetGroupLeaveReq)(nil),                // 15: entity.SetGroupLeaveReq
	(*entity.SetGroupSpecialTitleReq)(nil),         // 16: entity.SetGroupSpecialTitleReq
	(*entity.SetGroupAddRequestReq)(nil),           // 17: entity.SetGroupAddRequestReq
	(*entity.SetFriendAddRequestReq)(nil),          // 18: entity.SetFriendAddRequestReq
	(*entity.GetLoginInfoReq)(nil),                 // 19: entity.GetLoginInfoReq
	(*entity.GetStrangerInfoReq)(nil),              // 20: entity.GetStrangerInfoReq
	(*entity.GetFriendListReq)(nil),                // 21: entity.GetFriendListReq
	(*entity.GetGroupInfoReq)(nil),                 // 22: entity.GetGroupInfoReq
	(*entity.GetGroupListReq)(nil),                 // 23: entity.GetGroupListReq
	(*entity.GetGroupMemberInfoReq)(nil),           // 24: entity.GetGroupMemberInfoReq
	(*entity.GetGroupMemberListReq)(nil),           // 25: entity.GetGroupMemberListReq
	(*entity.GetGroupHonorInfoReq)(nil),            // 26: entity.GetGroupHonorInfoReq
	(*entity.GetCookiesReq)(nil),                   // 27: entity.GetCookiesReq
	(*entity.GetCsrfTokenReq)(nil),                 // 28: entity.GetCsrfTokenReq
	(*entity.GetCredentialsReq)(nil),               // 29: entity.GetCredentialsReq
	(*entity.GetRecordReq)(nil),                    // 30: entity.GetRecordReq
	(*entity.GetImageReq)(nil),                     // 31: entity.GetImageReq
	(*entity.CanSendImageReq)(nil),                 // 32: entity.CanSendImageReq
	(*entity.CanSendRecordReq)(nil),                // 33: entity.CanSendRecordReq
	(*entity.GetStatusReq)(nil),                    // 34: entity.GetStatusReq
	(*entity.GetVersionInfoReq)(nil),               // 35: entity.GetVersionInfoReq
	(*entity.SetRestartReq)(nil),                   // 36: entity.SetRestartReq
	(*entity.CleanCacheReq)(nil),                   // 37: entity.CleanCacheReq
	(*entity.CustomSetGroupPortraitReq)(nil),       // 38: entity.CustomSetGroupPortraitReq
	(*entity.CustomGetWordSlicesReq)(nil),          // 39: entity.CustomGetWordSlicesReq
	(*entity.CustomOcrImageReq)(nil),               // 40: entity.CustomOcrImageReq
	(*entity.CustomGetGroupSystemMsgReq)(nil),      // 41: entity.CustomGetGroupSystemMsgReq
	(*entity.CustomUploadGroupFileReq)(nil),        // 42: entity.CustomUploadGroupFileReq
	(*entity.CustomGetGroupFileSystemInfoReq)(nil), // 43: entity.CustomGetGroupFileSystemInfoReq
	(*entity.CustomGetGroupRootFilesReq)(nil),      // 44: entity.CustomGetGroupRootFilesReq
	(*entity.CustomGetGroupFilesByFolderReq)(nil),  // 45: entity.CustomGetGroupFilesByFolderReq
	(*entity.CustomGetGroupFileUrlReq)(nil),        // 46: entity.CustomGetGroupFileUrlReq
	(*entity.CustomGetStatusReq)(nil),              // 47: entity.CustomGetStatusReq
	(*entity.CustomGetGroupAtAllRemainReq)(nil),    // 48: entity.CustomGetGroupAtAllRemainReq
	(*entity.CustomGetVipInfoReq)(nil),             // 49: entity.CustomGetVipInfoReq
	(*entity.CustomSendGroupNoticeReq)(nil),        // 50: entity.CustomSendGroupNoticeReq
	(*entity.CustomReloadEventFilterReq)(nil),      // 51: entity.CustomReloadEventFilterReq
	(*entity.CustomDownloadFileReq)(nil),           // 52: entity.CustomDownloadFileReq
	(*entity.CustomGetOnlineClientsReq)(nil),       // 53: entity.CustomGetOnlineClientsReq
	(*entity.CustomGetGroupMsgHistoryReq)(nil),     // 54: entity.CustomGetGroupMsgHistoryReq
	(*entity.CustomSetEssenceMsgReq)(nil),          // 55: entity.CustomSetEssenceMsgReq
	(*entity.CustomDeleteEssenceMsgReq)(nil),       // 56: entity.CustomDeleteEssenceMsgReq
	(*entity.CustomGetEssenceMsgListReq)(nil),      // 57: entity.CustomGetEssenceMsgListReq
	(*entity.CustomCheckUrlSafelyReq)(nil),         // 58: entity.CustomCheckUrlSafelyReq
	(*entity.CustomGetModelShowReq)(nil),           // 59: entity.CustomGetModelShowReq
	(*entity.CustomSetModelShowReq)(nil),           // 60: entity.CustomSetModelShowReq
	(*entity.CustomGetMsgReq)(nil),                 // 61: entity.CustomGetMsgReq
	(*entity.CustomGetImageReq)(nil),               // 62: entity.CustomGetImageReq
	(*entity.CustomSendGroupForwardMsgReq)(nil),    // 63: entity.CustomSendGroupForwardMsgReq
	(*entity.CustomGetForwardMsgReq)(nil),          // 64: entity.CustomGetForwardMsgReq
	(*entity.GetAuthTokenReq)(nil),                 // 65: entity.GetAuthTokenReq
	(*entity.Config)(nil),                          // 66: entity.Config
	(*entity.SendMsgRsp)(nil),                      // 67: entity.SendMsgRsp
	(*entity.DeleteMsgRsp)(nil),                    // 68: entity.DeleteMsgRsp
	(*entity.GetMsgRsp)(nil),                       // 69: entity.GetMsgRsp
	(*entity.GetForwardMsgRsp)(nil),                // 70: entity.GetForwardMsgRsp
	(*entity.SendLikeRsp)(nil),                     // 71: entity.SendLikeRsp
	(*entity.SetGroupKickRsp)(nil),                 // 72: entity.SetGroupKickRsp
	(*entity.SetGroupBanRsp)(nil),                  // 73: entity.SetGroupBanRsp
	(*entity.SetGroupAnonymousBanRsp)(nil),         // 74: entity.SetGroupAnonymousBanRsp
	(*entity.SetGroupWholeBanRsp)(nil),             // 75: entity.SetGroupWholeBanRsp
	(*entity.SetGroupAdminRsp)(nil),                // 76: entity.SetGroupAdminRsp
	(*entity.SetGroupAnonymousRsp)(nil),            // 77: entity.SetGroupAnonymousRsp
	(*entity.SetGroupCardRsp)(nil),                 // 78: entity.SetGroupCardRsp
	(*entity.SetGroupNameRsp)(nil),                 // 79: entity.SetGroupNameRsp
	(*entity.SetGroupLeaveRsp)(nil),                // 80: entity.SetGroupLeaveRsp
	(*entity.SetGroupSpecialTitleRsp)(nil),         // 81: entity.SetGroupSpecialTitleRsp
	(*entity.SetGroupAddRequestRsp)(nil),           // 82: entity.SetGroupAddRequestRsp
	(*entity.SetFriendaddRequestRsp)(nil),          // 83: entity.SetFriendaddRequestRsp
	(*entity.GetLoginInfoRsp)(nil),                 // 84: entity.GetLoginInfoRsp
	(*entity.GetStrangerInfoRsp)(nil),              // 85: entity.GetStrangerInfoRsp
	(*entity.GetFriendListRsp)(nil),                // 86: entity.GetFriendListRsp
	(*entity.GetGroupInfoRsp)(nil),                 // 87: entity.GetGroupInfoRsp
	(*entity.GetGroupListRsp)(nil),                 // 88: entity.GetGroupListRsp
	(*entity.GetGroupMemberInfoRsp)(nil),           // 89: entity.GetGroupMemberInfoRsp
	(*entity.GetGroupMemberListRsp)(nil),           // 90: entity.GetGroupMemberListRsp
	(*entity.GetGroupHonorInfoRsp)(nil),            // 91: entity.GetGroupHonorInfoRsp
	(*entity.GetCookiesRsp)(nil),                   // 92: entity.GetCookiesRsp
	(*entity.GetCsrfTokenRsp)(nil),                 // 93: entity.GetCsrfTokenRsp
	(*entity.GetCredentialsRsp)(nil),               // 94: entity.GetCredentialsRsp
	(*entity.GetRecordRsp)(nil),                    // 95: entity.GetRecordRsp
	(*entity.GetImageRsp)(nil),                     // 96: entity.GetImageRsp
	(*entity.CanSendImageRsp)(nil),                 // 97: entity.CanSendImageRsp
	(*entity.CanSendRecordRsp)(nil),                // 98: entity.CanSendRecordRsp
	(*entity.GetStatusRsp)(nil),                    // 99: entity.GetStatusRsp
	(*entity.GetVersionInfoRsp)(nil),               // 100: entity.GetVersionInfoRsp
	(*entity.SetRestartRsp)(nil),                   // 101: entity.SetRestartRsp
	(*entity.CleanCacheRsp)(nil),                   // 102: entity.CleanCacheRsp
	(*entity.CustomSetGroupPortraitRsp)(nil),       // 103: entity.CustomSetGroupPortraitRsp
	(*entity.CustomGetWordSlicesRsp)(nil),          // 104: entity.CustomGetWordSlicesRsp
	(*entity.CustomOcrImageRsp)(nil),               // 105: entity.CustomOcrImageRsp
	(*entity.CustomGetGroupSystemMsgRsp)(nil),      // 106: entity.CustomGetGroupSystemMsgRsp
	(*entity.CustomUploadGroupFileRsp)(nil),        // 107: entity.CustomUploadGroupFileRsp
	(*entity.CustomGetGroupFileSystemInfoRsp)(nil), // 108: entity.CustomGetGroupFileSystemInfoRsp
	(*entity.CustomGetGroupRootFilesRsp)(nil),      // 109: entity.CustomGetGroupRootFilesRsp
	(*entity.CustomGetGroupFilesByFolderRsp)(nil),  // 110: entity.CustomGetGroupFilesByFolderRsp
	(*entity.CustomGetGroupFileUrlRsp)(nil),        // 111: entity.CustomGetGroupFileUrlRsp
	(*entity.CustomGetStatusRsp)(nil),              // 112: entity.CustomGetStatusRsp
	(*entity.CustomGetGroupAtAllRemainRsp)(nil),    // 113: entity.CustomGetGroupAtAllRemainRsp
	(*entity.CustomGetVipInfoRsp)(nil),             // 114: entity.CustomGetVipInfoRsp
	(*entity.CustomSendGroupNoticeRsp)(nil),        // 115: entity.CustomSendGroupNoticeRsp
	(*entity.CustomReloadEventFilterRsp)(nil),      // 116: entity.CustomReloadEventFilterRsp
	(*entity.CustomDownloadFileRsp)(nil),           // 117: entity.CustomDownloadFileRsp
	(*entity.CustomGetOnlineClientsRsp)(nil),       // 118: entity.CustomGetOnlineClientsRsp
	(*entity.CustomGetGroupMsgHistoryRsp)(nil),     // 119: entity.CustomGetGroupMsgHistoryRsp
	(*entity.CustomSetEssenceMsgRsp)(nil),          // 120: entity.CustomSetEssenceMsgRsp
	(*entity.CustomDeleteEssenceMsgRsp)(nil),       // 121: entity.CustomDeleteEssenceMsgRsp
	(*entity.CustomGetEssenceMsgListRsp)(nil),      // 122: entity.CustomGetEssenceMsgListRsp
	(*entity.CustomCheckUrlSafelyRsp)(nil),         // 123: entity.CustomCheckUrlSafelyRsp
	(*entity.CustomGetModelShowRsp)(nil),           // 124: entity.CustomGetModelShowRsp
	(*entity.CustomSetModelShowRsp)(nil),           // 125: entity.CustomSetModelShowRsp
	(*entity.CustomGetMsgRsp)(nil),                 // 126: entity.CustomGetMsgRsp
	(*entity.CustomGetImageRsp)(nil),               // 127: entity.CustomGetImageRsp
	(*entity.CustomSendGroupForwardMsgRsp)(nil),    // 128: entity.CustomSendGroupForwardMsgRsp
	(*entity.CustomGetForwardMsgRsp)(nil),          // 129: entity.CustomGetForwardMsgRsp
	(*entity.GetAuthTokenRsp)(nil),                 // 130: entity.GetAuthTokenRsp
}
var file_proto_adapterserver_proto_depIdxs = []int32{
	0,   // 0: service.AdapterService.SendPrivateMsg:input_type -> entity.SendPrivateMsgReq
	1,   // 1: service.AdapterService.SendGroupMsg:input_type -> entity.SendGroupMsgReq
	2,   // 2: service.AdapterService.SendMsg:input_type -> entity.SendMsgReq
	3,   // 3: service.AdapterService.DeleteMsg:input_type -> entity.DeleteMsgReq
	4,   // 4: service.AdapterService.GetMsg:input_type -> entity.GetMsgReq
	5,   // 5: service.AdapterService.GetForwardMsg:input_type -> entity.GetForwardMsgReq
	6,   // 6: service.AdapterService.SendLike:input_type -> entity.SendLikeReq
	7,   // 7: service.AdapterService.SetGroupKick:input_type -> entity.SetGroupKickReq
	8,   // 8: service.AdapterService.SetGroupBan:input_type -> entity.SetGroupBanReq
	9,   // 9: service.AdapterService.SetGroupAnonymousBan:input_type -> entity.SetGroupAnonymousBanReq
	10,  // 10: service.AdapterService.SetGroupWholeBan:input_type -> entity.SetGroupWholeBanReq
	11,  // 11: service.AdapterService.SetGroupAdmin:input_type -> entity.SetGroupAdminReq
	12,  // 12: service.AdapterService.SetGroupAnonymous:input_type -> entity.SetGroupAnonymousReq
	13,  // 13: service.AdapterService.SetGroupCard:input_type -> entity.SetGroupCardReq
	14,  // 14: service.AdapterService.SetGroupName:input_type -> entity.SetGroupNameReq
	15,  // 15: service.AdapterService.SetGroupLeave:input_type -> entity.SetGroupLeaveReq
	16,  // 16: service.AdapterService.SetGroupSpecialTitle:input_type -> entity.SetGroupSpecialTitleReq
	17,  // 17: service.AdapterService.SetGroupAddRequest:input_type -> entity.SetGroupAddRequestReq
	18,  // 18: service.AdapterService.SetFriendAddRequest:input_type -> entity.SetFriendAddRequestReq
	19,  // 19: service.AdapterService.GetLoginInfo:input_type -> entity.GetLoginInfoReq
	20,  // 20: service.AdapterService.GetStrangerInfo:input_type -> entity.GetStrangerInfoReq
	21,  // 21: service.AdapterService.GetFriendList:input_type -> entity.GetFriendListReq
	22,  // 22: service.AdapterService.GetGroupInfo:input_type -> entity.GetGroupInfoReq
	23,  // 23: service.AdapterService.GetGroupList:input_type -> entity.GetGroupListReq
	24,  // 24: service.AdapterService.GetGroupMemberInfo:input_type -> entity.GetGroupMemberInfoReq
	25,  // 25: service.AdapterService.GetGroupMemberList:input_type -> entity.GetGroupMemberListReq
	26,  // 26: service.AdapterService.GetGroupHonorInfo:input_type -> entity.GetGroupHonorInfoReq
	27,  // 27: service.AdapterService.GetCookies:input_type -> entity.GetCookiesReq
	28,  // 28: service.AdapterService.GetCsrfToken:input_type -> entity.GetCsrfTokenReq
	29,  // 29: service.AdapterService.GetCredentials:input_type -> entity.GetCredentialsReq
	30,  // 30: service.AdapterService.GetRecord:input_type -> entity.GetRecordReq
	31,  // 31: service.AdapterService.GetImage:input_type -> entity.GetImageReq
	32,  // 32: service.AdapterService.CanSendImage:input_type -> entity.CanSendImageReq
	33,  // 33: service.AdapterService.CanSendRecord:input_type -> entity.CanSendRecordReq
	34,  // 34: service.AdapterService.GetStatus:input_type -> entity.GetStatusReq
	35,  // 35: service.AdapterService.GetVersionInfo:input_type -> entity.GetVersionInfoReq
	36,  // 36: service.AdapterService.SetRestart:input_type -> entity.SetRestartReq
	37,  // 37: service.AdapterService.CleanCache:input_type -> entity.CleanCacheReq
	38,  // 38: service.AdapterService.CustomSetGroupPortrait:input_type -> entity.CustomSetGroupPortraitReq
	39,  // 39: service.AdapterService.CustomGetWordSlices:input_type -> entity.CustomGetWordSlicesReq
	40,  // 40: service.AdapterService.CustomOcrImage:input_type -> entity.CustomOcrImageReq
	41,  // 41: service.AdapterService.CustomGetGroupSystemMsg:input_type -> entity.CustomGetGroupSystemMsgReq
	42,  // 42: service.AdapterService.CustomUploadGroupFile:input_type -> entity.CustomUploadGroupFileReq
	43,  // 43: service.AdapterService.CustomGetGroupFileSystemInfo:input_type -> entity.CustomGetGroupFileSystemInfoReq
	44,  // 44: service.AdapterService.CustomGetGroupRootFiles:input_type -> entity.CustomGetGroupRootFilesReq
	45,  // 45: service.AdapterService.CustomGetGroupFilesByFolder:input_type -> entity.CustomGetGroupFilesByFolderReq
	46,  // 46: service.AdapterService.CustomGetGroupFileUrl:input_type -> entity.CustomGetGroupFileUrlReq
	47,  // 47: service.AdapterService.CustomGetStatus:input_type -> entity.CustomGetStatusReq
	48,  // 48: service.AdapterService.CustomGetGroupAtAllRemain:input_type -> entity.CustomGetGroupAtAllRemainReq
	49,  // 49: service.AdapterService.CustomGetVipInfo:input_type -> entity.CustomGetVipInfoReq
	50,  // 50: service.AdapterService.CustomSendGroupNotice:input_type -> entity.CustomSendGroupNoticeReq
	51,  // 51: service.AdapterService.CustomReloadEventFilter:input_type -> entity.CustomReloadEventFilterReq
	52,  // 52: service.AdapterService.CustomDownloadFile:input_type -> entity.CustomDownloadFileReq
	53,  // 53: service.AdapterService.CustomGetOnlineClinets:input_type -> entity.CustomGetOnlineClientsReq
	54,  // 54: service.AdapterService.CustomGetGroupMsgHistory:input_type -> entity.CustomGetGroupMsgHistoryReq
	55,  // 55: service.AdapterService.CustomSetEssenceMsg:input_type -> entity.CustomSetEssenceMsgReq
	56,  // 56: service.AdapterService.CustomDeleteEssenceMsg:input_type -> entity.CustomDeleteEssenceMsgReq
	57,  // 57: service.AdapterService.CustomGetEssenceMsgList:input_type -> entity.CustomGetEssenceMsgListReq
	58,  // 58: service.AdapterService.CustomCheckUrlSafely:input_type -> entity.CustomCheckUrlSafelyReq
	59,  // 59: service.AdapterService.CustomGetModelShow:input_type -> entity.CustomGetModelShowReq
	60,  // 60: service.AdapterService.CustomSetModelShow:input_type -> entity.CustomSetModelShowReq
	61,  // 61: service.AdapterService.CustomGetMsg:input_type -> entity.CustomGetMsgReq
	62,  // 62: service.AdapterService.CustomGetImage:input_type -> entity.CustomGetImageReq
	63,  // 63: service.AdapterService.CustomSendGroupForwardMsg:input_type -> entity.CustomSendGroupForwardMsgReq
	64,  // 64: service.AdapterService.CustomGetForwardMsg:input_type -> entity.CustomGetForwardMsgReq
	65,  // 65: service.AdapterService.GetAuthToken:input_type -> entity.GetAuthTokenReq
	66,  // 66: service.AdapterService.GetConfig:input_type -> entity.Config
	66,  // 67: service.AdapterService.UpdateConfig:input_type -> entity.Config
	36,  // 68: service.AdapterService.SetBotAdapterKill:input_type -> entity.SetRestartReq
	67,  // 69: service.AdapterService.SendPrivateMsg:output_type -> entity.SendMsgRsp
	67,  // 70: service.AdapterService.SendGroupMsg:output_type -> entity.SendMsgRsp
	67,  // 71: service.AdapterService.SendMsg:output_type -> entity.SendMsgRsp
	68,  // 72: service.AdapterService.DeleteMsg:output_type -> entity.DeleteMsgRsp
	69,  // 73: service.AdapterService.GetMsg:output_type -> entity.GetMsgRsp
	70,  // 74: service.AdapterService.GetForwardMsg:output_type -> entity.GetForwardMsgRsp
	71,  // 75: service.AdapterService.SendLike:output_type -> entity.SendLikeRsp
	72,  // 76: service.AdapterService.SetGroupKick:output_type -> entity.SetGroupKickRsp
	73,  // 77: service.AdapterService.SetGroupBan:output_type -> entity.SetGroupBanRsp
	74,  // 78: service.AdapterService.SetGroupAnonymousBan:output_type -> entity.SetGroupAnonymousBanRsp
	75,  // 79: service.AdapterService.SetGroupWholeBan:output_type -> entity.SetGroupWholeBanRsp
	76,  // 80: service.AdapterService.SetGroupAdmin:output_type -> entity.SetGroupAdminRsp
	77,  // 81: service.AdapterService.SetGroupAnonymous:output_type -> entity.SetGroupAnonymousRsp
	78,  // 82: service.AdapterService.SetGroupCard:output_type -> entity.SetGroupCardRsp
	79,  // 83: service.AdapterService.SetGroupName:output_type -> entity.SetGroupNameRsp
	80,  // 84: service.AdapterService.SetGroupLeave:output_type -> entity.SetGroupLeaveRsp
	81,  // 85: service.AdapterService.SetGroupSpecialTitle:output_type -> entity.SetGroupSpecialTitleRsp
	82,  // 86: service.AdapterService.SetGroupAddRequest:output_type -> entity.SetGroupAddRequestRsp
	83,  // 87: service.AdapterService.SetFriendAddRequest:output_type -> entity.SetFriendaddRequestRsp
	84,  // 88: service.AdapterService.GetLoginInfo:output_type -> entity.GetLoginInfoRsp
	85,  // 89: service.AdapterService.GetStrangerInfo:output_type -> entity.GetStrangerInfoRsp
	86,  // 90: service.AdapterService.GetFriendList:output_type -> entity.GetFriendListRsp
	87,  // 91: service.AdapterService.GetGroupInfo:output_type -> entity.GetGroupInfoRsp
	88,  // 92: service.AdapterService.GetGroupList:output_type -> entity.GetGroupListRsp
	89,  // 93: service.AdapterService.GetGroupMemberInfo:output_type -> entity.GetGroupMemberInfoRsp
	90,  // 94: service.AdapterService.GetGroupMemberList:output_type -> entity.GetGroupMemberListRsp
	91,  // 95: service.AdapterService.GetGroupHonorInfo:output_type -> entity.GetGroupHonorInfoRsp
	92,  // 96: service.AdapterService.GetCookies:output_type -> entity.GetCookiesRsp
	93,  // 97: service.AdapterService.GetCsrfToken:output_type -> entity.GetCsrfTokenRsp
	94,  // 98: service.AdapterService.GetCredentials:output_type -> entity.GetCredentialsRsp
	95,  // 99: service.AdapterService.GetRecord:output_type -> entity.GetRecordRsp
	96,  // 100: service.AdapterService.GetImage:output_type -> entity.GetImageRsp
	97,  // 101: service.AdapterService.CanSendImage:output_type -> entity.CanSendImageRsp
	98,  // 102: service.AdapterService.CanSendRecord:output_type -> entity.CanSendRecordRsp
	99,  // 103: service.AdapterService.GetStatus:output_type -> entity.GetStatusRsp
	100, // 104: service.AdapterService.GetVersionInfo:output_type -> entity.GetVersionInfoRsp
	101, // 105: service.AdapterService.SetRestart:output_type -> entity.SetRestartRsp
	102, // 106: service.AdapterService.CleanCache:output_type -> entity.CleanCacheRsp
	103, // 107: service.AdapterService.CustomSetGroupPortrait:output_type -> entity.CustomSetGroupPortraitRsp
	104, // 108: service.AdapterService.CustomGetWordSlices:output_type -> entity.CustomGetWordSlicesRsp
	105, // 109: service.AdapterService.CustomOcrImage:output_type -> entity.CustomOcrImageRsp
	106, // 110: service.AdapterService.CustomGetGroupSystemMsg:output_type -> entity.CustomGetGroupSystemMsgRsp
	107, // 111: service.AdapterService.CustomUploadGroupFile:output_type -> entity.CustomUploadGroupFileRsp
	108, // 112: service.AdapterService.CustomGetGroupFileSystemInfo:output_type -> entity.CustomGetGroupFileSystemInfoRsp
	109, // 113: service.AdapterService.CustomGetGroupRootFiles:output_type -> entity.CustomGetGroupRootFilesRsp
	110, // 114: service.AdapterService.CustomGetGroupFilesByFolder:output_type -> entity.CustomGetGroupFilesByFolderRsp
	111, // 115: service.AdapterService.CustomGetGroupFileUrl:output_type -> entity.CustomGetGroupFileUrlRsp
	112, // 116: service.AdapterService.CustomGetStatus:output_type -> entity.CustomGetStatusRsp
	113, // 117: service.AdapterService.CustomGetGroupAtAllRemain:output_type -> entity.CustomGetGroupAtAllRemainRsp
	114, // 118: service.AdapterService.CustomGetVipInfo:output_type -> entity.CustomGetVipInfoRsp
	115, // 119: service.AdapterService.CustomSendGroupNotice:output_type -> entity.CustomSendGroupNoticeRsp
	116, // 120: service.AdapterService.CustomReloadEventFilter:output_type -> entity.CustomReloadEventFilterRsp
	117, // 121: service.AdapterService.CustomDownloadFile:output_type -> entity.CustomDownloadFileRsp
	118, // 122: service.AdapterService.CustomGetOnlineClinets:output_type -> entity.CustomGetOnlineClientsRsp
	119, // 123: service.AdapterService.CustomGetGroupMsgHistory:output_type -> entity.CustomGetGroupMsgHistoryRsp
	120, // 124: service.AdapterService.CustomSetEssenceMsg:output_type -> entity.CustomSetEssenceMsgRsp
	121, // 125: service.AdapterService.CustomDeleteEssenceMsg:output_type -> entity.CustomDeleteEssenceMsgRsp
	122, // 126: service.AdapterService.CustomGetEssenceMsgList:output_type -> entity.CustomGetEssenceMsgListRsp
	123, // 127: service.AdapterService.CustomCheckUrlSafely:output_type -> entity.CustomCheckUrlSafelyRsp
	124, // 128: service.AdapterService.CustomGetModelShow:output_type -> entity.CustomGetModelShowRsp
	125, // 129: service.AdapterService.CustomSetModelShow:output_type -> entity.CustomSetModelShowRsp
	126, // 130: service.AdapterService.CustomGetMsg:output_type -> entity.CustomGetMsgRsp
	127, // 131: service.AdapterService.CustomGetImage:output_type -> entity.CustomGetImageRsp
	128, // 132: service.AdapterService.CustomSendGroupForwardMsg:output_type -> entity.CustomSendGroupForwardMsgRsp
	129, // 133: service.AdapterService.CustomGetForwardMsg:output_type -> entity.CustomGetForwardMsgRsp
	130, // 134: service.AdapterService.GetAuthToken:output_type -> entity.GetAuthTokenRsp
	66,  // 135: service.AdapterService.GetConfig:output_type -> entity.Config
	66,  // 136: service.AdapterService.UpdateConfig:output_type -> entity.Config
	101, // 137: service.AdapterService.SetBotAdapterKill:output_type -> entity.SetRestartRsp
	69,  // [69:138] is the sub-list for method output_type
	0,   // [0:69] is the sub-list for method input_type
	0,   // [0:0] is the sub-list for extension type_name
	0,   // [0:0] is the sub-list for extension extendee
	0,   // [0:0] is the sub-list for field type_name
}

func init() { file_proto_adapterserver_proto_init() }
func file_proto_adapterserver_proto_init() {
	if File_proto_adapterserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_adapterserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_adapterserver_proto_goTypes,
		DependencyIndexes: file_proto_adapterserver_proto_depIdxs,
	}.Build()
	File_proto_adapterserver_proto = out.File
	file_proto_adapterserver_proto_rawDesc = nil
	file_proto_adapterserver_proto_goTypes = nil
	file_proto_adapterserver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdapterServiceClient is the client API for AdapterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdapterServiceClient interface {
	// onebot-11 标准的api
	SendPrivateMsg(ctx context.Context, in *entity.SendPrivateMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error)
	SendGroupMsg(ctx context.Context, in *entity.SendGroupMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error)
	SendMsg(ctx context.Context, in *entity.SendMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error)
	DeleteMsg(ctx context.Context, in *entity.DeleteMsgReq, opts ...grpc.CallOption) (*entity.DeleteMsgRsp, error)
	GetMsg(ctx context.Context, in *entity.GetMsgReq, opts ...grpc.CallOption) (*entity.GetMsgRsp, error)
	GetForwardMsg(ctx context.Context, in *entity.GetForwardMsgReq, opts ...grpc.CallOption) (*entity.GetForwardMsgRsp, error)
	SendLike(ctx context.Context, in *entity.SendLikeReq, opts ...grpc.CallOption) (*entity.SendLikeRsp, error)
	SetGroupKick(ctx context.Context, in *entity.SetGroupKickReq, opts ...grpc.CallOption) (*entity.SetGroupKickRsp, error)
	SetGroupBan(ctx context.Context, in *entity.SetGroupBanReq, opts ...grpc.CallOption) (*entity.SetGroupBanRsp, error)
	SetGroupAnonymousBan(ctx context.Context, in *entity.SetGroupAnonymousBanReq, opts ...grpc.CallOption) (*entity.SetGroupAnonymousBanRsp, error)
	SetGroupWholeBan(ctx context.Context, in *entity.SetGroupWholeBanReq, opts ...grpc.CallOption) (*entity.SetGroupWholeBanRsp, error)
	SetGroupAdmin(ctx context.Context, in *entity.SetGroupAdminReq, opts ...grpc.CallOption) (*entity.SetGroupAdminRsp, error)
	SetGroupAnonymous(ctx context.Context, in *entity.SetGroupAnonymousReq, opts ...grpc.CallOption) (*entity.SetGroupAnonymousRsp, error)
	SetGroupCard(ctx context.Context, in *entity.SetGroupCardReq, opts ...grpc.CallOption) (*entity.SetGroupCardRsp, error)
	SetGroupName(ctx context.Context, in *entity.SetGroupNameReq, opts ...grpc.CallOption) (*entity.SetGroupNameRsp, error)
	SetGroupLeave(ctx context.Context, in *entity.SetGroupLeaveReq, opts ...grpc.CallOption) (*entity.SetGroupLeaveRsp, error)
	SetGroupSpecialTitle(ctx context.Context, in *entity.SetGroupSpecialTitleReq, opts ...grpc.CallOption) (*entity.SetGroupSpecialTitleRsp, error)
	SetGroupAddRequest(ctx context.Context, in *entity.SetGroupAddRequestReq, opts ...grpc.CallOption) (*entity.SetGroupAddRequestRsp, error)
	SetFriendAddRequest(ctx context.Context, in *entity.SetFriendAddRequestReq, opts ...grpc.CallOption) (*entity.SetFriendaddRequestRsp, error)
	GetLoginInfo(ctx context.Context, in *entity.GetLoginInfoReq, opts ...grpc.CallOption) (*entity.GetLoginInfoRsp, error)
	GetStrangerInfo(ctx context.Context, in *entity.GetStrangerInfoReq, opts ...grpc.CallOption) (*entity.GetStrangerInfoRsp, error)
	GetFriendList(ctx context.Context, in *entity.GetFriendListReq, opts ...grpc.CallOption) (*entity.GetFriendListRsp, error)
	GetGroupInfo(ctx context.Context, in *entity.GetGroupInfoReq, opts ...grpc.CallOption) (*entity.GetGroupInfoRsp, error)
	GetGroupList(ctx context.Context, in *entity.GetGroupListReq, opts ...grpc.CallOption) (*entity.GetGroupListRsp, error)
	GetGroupMemberInfo(ctx context.Context, in *entity.GetGroupMemberInfoReq, opts ...grpc.CallOption) (*entity.GetGroupMemberInfoRsp, error)
	GetGroupMemberList(ctx context.Context, in *entity.GetGroupMemberListReq, opts ...grpc.CallOption) (*entity.GetGroupMemberListRsp, error)
	GetGroupHonorInfo(ctx context.Context, in *entity.GetGroupHonorInfoReq, opts ...grpc.CallOption) (*entity.GetGroupHonorInfoRsp, error)
	GetCookies(ctx context.Context, in *entity.GetCookiesReq, opts ...grpc.CallOption) (*entity.GetCookiesRsp, error)
	GetCsrfToken(ctx context.Context, in *entity.GetCsrfTokenReq, opts ...grpc.CallOption) (*entity.GetCsrfTokenRsp, error)
	GetCredentials(ctx context.Context, in *entity.GetCredentialsReq, opts ...grpc.CallOption) (*entity.GetCredentialsRsp, error)
	GetRecord(ctx context.Context, in *entity.GetRecordReq, opts ...grpc.CallOption) (*entity.GetRecordRsp, error)
	GetImage(ctx context.Context, in *entity.GetImageReq, opts ...grpc.CallOption) (*entity.GetImageRsp, error)
	CanSendImage(ctx context.Context, in *entity.CanSendImageReq, opts ...grpc.CallOption) (*entity.CanSendImageRsp, error)
	CanSendRecord(ctx context.Context, in *entity.CanSendRecordReq, opts ...grpc.CallOption) (*entity.CanSendRecordRsp, error)
	GetStatus(ctx context.Context, in *entity.GetStatusReq, opts ...grpc.CallOption) (*entity.GetStatusRsp, error)
	GetVersionInfo(ctx context.Context, in *entity.GetVersionInfoReq, opts ...grpc.CallOption) (*entity.GetVersionInfoRsp, error)
	SetRestart(ctx context.Context, in *entity.SetRestartReq, opts ...grpc.CallOption) (*entity.SetRestartRsp, error)
	CleanCache(ctx context.Context, in *entity.CleanCacheReq, opts ...grpc.CallOption) (*entity.CleanCacheRsp, error)
	// go-cqhttp 实现的一些非标准api
	CustomSetGroupPortrait(ctx context.Context, in *entity.CustomSetGroupPortraitReq, opts ...grpc.CallOption) (*entity.CustomSetGroupPortraitRsp, error)
	CustomGetWordSlices(ctx context.Context, in *entity.CustomGetWordSlicesReq, opts ...grpc.CallOption) (*entity.CustomGetWordSlicesRsp, error)
	CustomOcrImage(ctx context.Context, in *entity.CustomOcrImageReq, opts ...grpc.CallOption) (*entity.CustomOcrImageRsp, error)
	CustomGetGroupSystemMsg(ctx context.Context, in *entity.CustomGetGroupSystemMsgReq, opts ...grpc.CallOption) (*entity.CustomGetGroupSystemMsgRsp, error)
	CustomUploadGroupFile(ctx context.Context, in *entity.CustomUploadGroupFileReq, opts ...grpc.CallOption) (*entity.CustomUploadGroupFileRsp, error)
	CustomGetGroupFileSystemInfo(ctx context.Context, in *entity.CustomGetGroupFileSystemInfoReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFileSystemInfoRsp, error)
	CustomGetGroupRootFiles(ctx context.Context, in *entity.CustomGetGroupRootFilesReq, opts ...grpc.CallOption) (*entity.CustomGetGroupRootFilesRsp, error)
	CustomGetGroupFilesByFolder(ctx context.Context, in *entity.CustomGetGroupFilesByFolderReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFilesByFolderRsp, error)
	CustomGetGroupFileUrl(ctx context.Context, in *entity.CustomGetGroupFileUrlReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFileUrlRsp, error)
	CustomGetStatus(ctx context.Context, in *entity.CustomGetStatusReq, opts ...grpc.CallOption) (*entity.CustomGetStatusRsp, error)
	CustomGetGroupAtAllRemain(ctx context.Context, in *entity.CustomGetGroupAtAllRemainReq, opts ...grpc.CallOption) (*entity.CustomGetGroupAtAllRemainRsp, error)
	CustomGetVipInfo(ctx context.Context, in *entity.CustomGetVipInfoReq, opts ...grpc.CallOption) (*entity.CustomGetVipInfoRsp, error)
	CustomSendGroupNotice(ctx context.Context, in *entity.CustomSendGroupNoticeReq, opts ...grpc.CallOption) (*entity.CustomSendGroupNoticeRsp, error)
	CustomReloadEventFilter(ctx context.Context, in *entity.CustomReloadEventFilterReq, opts ...grpc.CallOption) (*entity.CustomReloadEventFilterRsp, error)
	CustomDownloadFile(ctx context.Context, in *entity.CustomDownloadFileReq, opts ...grpc.CallOption) (*entity.CustomDownloadFileRsp, error)
	CustomGetOnlineClinets(ctx context.Context, in *entity.CustomGetOnlineClientsReq, opts ...grpc.CallOption) (*entity.CustomGetOnlineClientsRsp, error)
	CustomGetGroupMsgHistory(ctx context.Context, in *entity.CustomGetGroupMsgHistoryReq, opts ...grpc.CallOption) (*entity.CustomGetGroupMsgHistoryRsp, error)
	CustomSetEssenceMsg(ctx context.Context, in *entity.CustomSetEssenceMsgReq, opts ...grpc.CallOption) (*entity.CustomSetEssenceMsgRsp, error)
	CustomDeleteEssenceMsg(ctx context.Context, in *entity.CustomDeleteEssenceMsgReq, opts ...grpc.CallOption) (*entity.CustomDeleteEssenceMsgRsp, error)
	CustomGetEssenceMsgList(ctx context.Context, in *entity.CustomGetEssenceMsgListReq, opts ...grpc.CallOption) (*entity.CustomGetEssenceMsgListRsp, error)
	CustomCheckUrlSafely(ctx context.Context, in *entity.CustomCheckUrlSafelyReq, opts ...grpc.CallOption) (*entity.CustomCheckUrlSafelyRsp, error)
	CustomGetModelShow(ctx context.Context, in *entity.CustomGetModelShowReq, opts ...grpc.CallOption) (*entity.CustomGetModelShowRsp, error)
	CustomSetModelShow(ctx context.Context, in *entity.CustomSetModelShowReq, opts ...grpc.CallOption) (*entity.CustomSetModelShowRsp, error)
	CustomGetMsg(ctx context.Context, in *entity.CustomGetMsgReq, opts ...grpc.CallOption) (*entity.CustomGetMsgRsp, error)
	CustomGetImage(ctx context.Context, in *entity.CustomGetImageReq, opts ...grpc.CallOption) (*entity.CustomGetImageRsp, error)
	CustomSendGroupForwardMsg(ctx context.Context, in *entity.CustomSendGroupForwardMsgReq, opts ...grpc.CallOption) (*entity.CustomSendGroupForwardMsgRsp, error)
	CustomGetForwardMsg(ctx context.Context, in *entity.CustomGetForwardMsgReq, opts ...grpc.CallOption) (*entity.CustomGetForwardMsgRsp, error)
	// 下面是bot_adapter自身的一些功能实现
	GetAuthToken(ctx context.Context, in *entity.GetAuthTokenReq, opts ...grpc.CallOption) (*entity.GetAuthTokenRsp, error)
	GetConfig(ctx context.Context, in *entity.Config, opts ...grpc.CallOption) (*entity.Config, error)
	UpdateConfig(ctx context.Context, in *entity.Config, opts ...grpc.CallOption) (*entity.Config, error)
	SetBotAdapterKill(ctx context.Context, in *entity.SetRestartReq, opts ...grpc.CallOption) (*entity.SetRestartRsp, error)
}

type adapterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdapterServiceClient(cc grpc.ClientConnInterface) AdapterServiceClient {
	return &adapterServiceClient{cc}
}

func (c *adapterServiceClient) SendPrivateMsg(ctx context.Context, in *entity.SendPrivateMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error) {
	out := new(entity.SendMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SendPrivateMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SendGroupMsg(ctx context.Context, in *entity.SendGroupMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error) {
	out := new(entity.SendMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SendGroupMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SendMsg(ctx context.Context, in *entity.SendMsgReq, opts ...grpc.CallOption) (*entity.SendMsgRsp, error) {
	out := new(entity.SendMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) DeleteMsg(ctx context.Context, in *entity.DeleteMsgReq, opts ...grpc.CallOption) (*entity.DeleteMsgRsp, error) {
	out := new(entity.DeleteMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/DeleteMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetMsg(ctx context.Context, in *entity.GetMsgReq, opts ...grpc.CallOption) (*entity.GetMsgRsp, error) {
	out := new(entity.GetMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetForwardMsg(ctx context.Context, in *entity.GetForwardMsgReq, opts ...grpc.CallOption) (*entity.GetForwardMsgRsp, error) {
	out := new(entity.GetForwardMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SendLike(ctx context.Context, in *entity.SendLikeReq, opts ...grpc.CallOption) (*entity.SendLikeRsp, error) {
	out := new(entity.SendLikeRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SendLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupKick(ctx context.Context, in *entity.SetGroupKickReq, opts ...grpc.CallOption) (*entity.SetGroupKickRsp, error) {
	out := new(entity.SetGroupKickRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupKick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupBan(ctx context.Context, in *entity.SetGroupBanReq, opts ...grpc.CallOption) (*entity.SetGroupBanRsp, error) {
	out := new(entity.SetGroupBanRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupAnonymousBan(ctx context.Context, in *entity.SetGroupAnonymousBanReq, opts ...grpc.CallOption) (*entity.SetGroupAnonymousBanRsp, error) {
	out := new(entity.SetGroupAnonymousBanRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupAnonymousBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupWholeBan(ctx context.Context, in *entity.SetGroupWholeBanReq, opts ...grpc.CallOption) (*entity.SetGroupWholeBanRsp, error) {
	out := new(entity.SetGroupWholeBanRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupWholeBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupAdmin(ctx context.Context, in *entity.SetGroupAdminReq, opts ...grpc.CallOption) (*entity.SetGroupAdminRsp, error) {
	out := new(entity.SetGroupAdminRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupAnonymous(ctx context.Context, in *entity.SetGroupAnonymousReq, opts ...grpc.CallOption) (*entity.SetGroupAnonymousRsp, error) {
	out := new(entity.SetGroupAnonymousRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupAnonymous", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupCard(ctx context.Context, in *entity.SetGroupCardReq, opts ...grpc.CallOption) (*entity.SetGroupCardRsp, error) {
	out := new(entity.SetGroupCardRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupName(ctx context.Context, in *entity.SetGroupNameReq, opts ...grpc.CallOption) (*entity.SetGroupNameRsp, error) {
	out := new(entity.SetGroupNameRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupLeave(ctx context.Context, in *entity.SetGroupLeaveReq, opts ...grpc.CallOption) (*entity.SetGroupLeaveRsp, error) {
	out := new(entity.SetGroupLeaveRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupSpecialTitle(ctx context.Context, in *entity.SetGroupSpecialTitleReq, opts ...grpc.CallOption) (*entity.SetGroupSpecialTitleRsp, error) {
	out := new(entity.SetGroupSpecialTitleRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupSpecialTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetGroupAddRequest(ctx context.Context, in *entity.SetGroupAddRequestReq, opts ...grpc.CallOption) (*entity.SetGroupAddRequestRsp, error) {
	out := new(entity.SetGroupAddRequestRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetGroupAddRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetFriendAddRequest(ctx context.Context, in *entity.SetFriendAddRequestReq, opts ...grpc.CallOption) (*entity.SetFriendaddRequestRsp, error) {
	out := new(entity.SetFriendaddRequestRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetFriendAddRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetLoginInfo(ctx context.Context, in *entity.GetLoginInfoReq, opts ...grpc.CallOption) (*entity.GetLoginInfoRsp, error) {
	out := new(entity.GetLoginInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetLoginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetStrangerInfo(ctx context.Context, in *entity.GetStrangerInfoReq, opts ...grpc.CallOption) (*entity.GetStrangerInfoRsp, error) {
	out := new(entity.GetStrangerInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetStrangerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetFriendList(ctx context.Context, in *entity.GetFriendListReq, opts ...grpc.CallOption) (*entity.GetFriendListRsp, error) {
	out := new(entity.GetFriendListRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetFriendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetGroupInfo(ctx context.Context, in *entity.GetGroupInfoReq, opts ...grpc.CallOption) (*entity.GetGroupInfoRsp, error) {
	out := new(entity.GetGroupInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetGroupInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetGroupList(ctx context.Context, in *entity.GetGroupListReq, opts ...grpc.CallOption) (*entity.GetGroupListRsp, error) {
	out := new(entity.GetGroupListRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetGroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetGroupMemberInfo(ctx context.Context, in *entity.GetGroupMemberInfoReq, opts ...grpc.CallOption) (*entity.GetGroupMemberInfoRsp, error) {
	out := new(entity.GetGroupMemberInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetGroupMemberInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetGroupMemberList(ctx context.Context, in *entity.GetGroupMemberListReq, opts ...grpc.CallOption) (*entity.GetGroupMemberListRsp, error) {
	out := new(entity.GetGroupMemberListRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetGroupMemberList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetGroupHonorInfo(ctx context.Context, in *entity.GetGroupHonorInfoReq, opts ...grpc.CallOption) (*entity.GetGroupHonorInfoRsp, error) {
	out := new(entity.GetGroupHonorInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetGroupHonorInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetCookies(ctx context.Context, in *entity.GetCookiesReq, opts ...grpc.CallOption) (*entity.GetCookiesRsp, error) {
	out := new(entity.GetCookiesRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetCookies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetCsrfToken(ctx context.Context, in *entity.GetCsrfTokenReq, opts ...grpc.CallOption) (*entity.GetCsrfTokenRsp, error) {
	out := new(entity.GetCsrfTokenRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetCsrfToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetCredentials(ctx context.Context, in *entity.GetCredentialsReq, opts ...grpc.CallOption) (*entity.GetCredentialsRsp, error) {
	out := new(entity.GetCredentialsRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetRecord(ctx context.Context, in *entity.GetRecordReq, opts ...grpc.CallOption) (*entity.GetRecordRsp, error) {
	out := new(entity.GetRecordRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetImage(ctx context.Context, in *entity.GetImageReq, opts ...grpc.CallOption) (*entity.GetImageRsp, error) {
	out := new(entity.GetImageRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CanSendImage(ctx context.Context, in *entity.CanSendImageReq, opts ...grpc.CallOption) (*entity.CanSendImageRsp, error) {
	out := new(entity.CanSendImageRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CanSendImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CanSendRecord(ctx context.Context, in *entity.CanSendRecordReq, opts ...grpc.CallOption) (*entity.CanSendRecordRsp, error) {
	out := new(entity.CanSendRecordRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CanSendRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetStatus(ctx context.Context, in *entity.GetStatusReq, opts ...grpc.CallOption) (*entity.GetStatusRsp, error) {
	out := new(entity.GetStatusRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetVersionInfo(ctx context.Context, in *entity.GetVersionInfoReq, opts ...grpc.CallOption) (*entity.GetVersionInfoRsp, error) {
	out := new(entity.GetVersionInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetVersionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetRestart(ctx context.Context, in *entity.SetRestartReq, opts ...grpc.CallOption) (*entity.SetRestartRsp, error) {
	out := new(entity.SetRestartRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetRestart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CleanCache(ctx context.Context, in *entity.CleanCacheReq, opts ...grpc.CallOption) (*entity.CleanCacheRsp, error) {
	out := new(entity.CleanCacheRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CleanCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomSetGroupPortrait(ctx context.Context, in *entity.CustomSetGroupPortraitReq, opts ...grpc.CallOption) (*entity.CustomSetGroupPortraitRsp, error) {
	out := new(entity.CustomSetGroupPortraitRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomSetGroupPortrait", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetWordSlices(ctx context.Context, in *entity.CustomGetWordSlicesReq, opts ...grpc.CallOption) (*entity.CustomGetWordSlicesRsp, error) {
	out := new(entity.CustomGetWordSlicesRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetWordSlices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomOcrImage(ctx context.Context, in *entity.CustomOcrImageReq, opts ...grpc.CallOption) (*entity.CustomOcrImageRsp, error) {
	out := new(entity.CustomOcrImageRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomOcrImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupSystemMsg(ctx context.Context, in *entity.CustomGetGroupSystemMsgReq, opts ...grpc.CallOption) (*entity.CustomGetGroupSystemMsgRsp, error) {
	out := new(entity.CustomGetGroupSystemMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupSystemMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomUploadGroupFile(ctx context.Context, in *entity.CustomUploadGroupFileReq, opts ...grpc.CallOption) (*entity.CustomUploadGroupFileRsp, error) {
	out := new(entity.CustomUploadGroupFileRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomUploadGroupFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupFileSystemInfo(ctx context.Context, in *entity.CustomGetGroupFileSystemInfoReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFileSystemInfoRsp, error) {
	out := new(entity.CustomGetGroupFileSystemInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupFileSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupRootFiles(ctx context.Context, in *entity.CustomGetGroupRootFilesReq, opts ...grpc.CallOption) (*entity.CustomGetGroupRootFilesRsp, error) {
	out := new(entity.CustomGetGroupRootFilesRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupRootFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupFilesByFolder(ctx context.Context, in *entity.CustomGetGroupFilesByFolderReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFilesByFolderRsp, error) {
	out := new(entity.CustomGetGroupFilesByFolderRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupFilesByFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupFileUrl(ctx context.Context, in *entity.CustomGetGroupFileUrlReq, opts ...grpc.CallOption) (*entity.CustomGetGroupFileUrlRsp, error) {
	out := new(entity.CustomGetGroupFileUrlRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupFileUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetStatus(ctx context.Context, in *entity.CustomGetStatusReq, opts ...grpc.CallOption) (*entity.CustomGetStatusRsp, error) {
	out := new(entity.CustomGetStatusRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupAtAllRemain(ctx context.Context, in *entity.CustomGetGroupAtAllRemainReq, opts ...grpc.CallOption) (*entity.CustomGetGroupAtAllRemainRsp, error) {
	out := new(entity.CustomGetGroupAtAllRemainRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupAtAllRemain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetVipInfo(ctx context.Context, in *entity.CustomGetVipInfoReq, opts ...grpc.CallOption) (*entity.CustomGetVipInfoRsp, error) {
	out := new(entity.CustomGetVipInfoRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetVipInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomSendGroupNotice(ctx context.Context, in *entity.CustomSendGroupNoticeReq, opts ...grpc.CallOption) (*entity.CustomSendGroupNoticeRsp, error) {
	out := new(entity.CustomSendGroupNoticeRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomSendGroupNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomReloadEventFilter(ctx context.Context, in *entity.CustomReloadEventFilterReq, opts ...grpc.CallOption) (*entity.CustomReloadEventFilterRsp, error) {
	out := new(entity.CustomReloadEventFilterRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomReloadEventFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomDownloadFile(ctx context.Context, in *entity.CustomDownloadFileReq, opts ...grpc.CallOption) (*entity.CustomDownloadFileRsp, error) {
	out := new(entity.CustomDownloadFileRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomDownloadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetOnlineClinets(ctx context.Context, in *entity.CustomGetOnlineClientsReq, opts ...grpc.CallOption) (*entity.CustomGetOnlineClientsRsp, error) {
	out := new(entity.CustomGetOnlineClientsRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetOnlineClinets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetGroupMsgHistory(ctx context.Context, in *entity.CustomGetGroupMsgHistoryReq, opts ...grpc.CallOption) (*entity.CustomGetGroupMsgHistoryRsp, error) {
	out := new(entity.CustomGetGroupMsgHistoryRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetGroupMsgHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomSetEssenceMsg(ctx context.Context, in *entity.CustomSetEssenceMsgReq, opts ...grpc.CallOption) (*entity.CustomSetEssenceMsgRsp, error) {
	out := new(entity.CustomSetEssenceMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomSetEssenceMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomDeleteEssenceMsg(ctx context.Context, in *entity.CustomDeleteEssenceMsgReq, opts ...grpc.CallOption) (*entity.CustomDeleteEssenceMsgRsp, error) {
	out := new(entity.CustomDeleteEssenceMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomDeleteEssenceMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetEssenceMsgList(ctx context.Context, in *entity.CustomGetEssenceMsgListReq, opts ...grpc.CallOption) (*entity.CustomGetEssenceMsgListRsp, error) {
	out := new(entity.CustomGetEssenceMsgListRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetEssenceMsgList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomCheckUrlSafely(ctx context.Context, in *entity.CustomCheckUrlSafelyReq, opts ...grpc.CallOption) (*entity.CustomCheckUrlSafelyRsp, error) {
	out := new(entity.CustomCheckUrlSafelyRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomCheckUrlSafely", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetModelShow(ctx context.Context, in *entity.CustomGetModelShowReq, opts ...grpc.CallOption) (*entity.CustomGetModelShowRsp, error) {
	out := new(entity.CustomGetModelShowRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetModelShow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomSetModelShow(ctx context.Context, in *entity.CustomSetModelShowReq, opts ...grpc.CallOption) (*entity.CustomSetModelShowRsp, error) {
	out := new(entity.CustomSetModelShowRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomSetModelShow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetMsg(ctx context.Context, in *entity.CustomGetMsgReq, opts ...grpc.CallOption) (*entity.CustomGetMsgRsp, error) {
	out := new(entity.CustomGetMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetImage(ctx context.Context, in *entity.CustomGetImageReq, opts ...grpc.CallOption) (*entity.CustomGetImageRsp, error) {
	out := new(entity.CustomGetImageRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomSendGroupForwardMsg(ctx context.Context, in *entity.CustomSendGroupForwardMsgReq, opts ...grpc.CallOption) (*entity.CustomSendGroupForwardMsgRsp, error) {
	out := new(entity.CustomSendGroupForwardMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomSendGroupForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) CustomGetForwardMsg(ctx context.Context, in *entity.CustomGetForwardMsgReq, opts ...grpc.CallOption) (*entity.CustomGetForwardMsgRsp, error) {
	out := new(entity.CustomGetForwardMsgRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/CustomGetForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetAuthToken(ctx context.Context, in *entity.GetAuthTokenReq, opts ...grpc.CallOption) (*entity.GetAuthTokenRsp, error) {
	out := new(entity.GetAuthTokenRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetAuthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) GetConfig(ctx context.Context, in *entity.Config, opts ...grpc.CallOption) (*entity.Config, error) {
	out := new(entity.Config)
	err := c.cc.Invoke(ctx, "/service.AdapterService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) UpdateConfig(ctx context.Context, in *entity.Config, opts ...grpc.CallOption) (*entity.Config, error) {
	out := new(entity.Config)
	err := c.cc.Invoke(ctx, "/service.AdapterService/UpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterServiceClient) SetBotAdapterKill(ctx context.Context, in *entity.SetRestartReq, opts ...grpc.CallOption) (*entity.SetRestartRsp, error) {
	out := new(entity.SetRestartRsp)
	err := c.cc.Invoke(ctx, "/service.AdapterService/SetBotAdapterKill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdapterServiceServer is the server API for AdapterService service.
type AdapterServiceServer interface {
	// onebot-11 标准的api
	SendPrivateMsg(context.Context, *entity.SendPrivateMsgReq) (*entity.SendMsgRsp, error)
	SendGroupMsg(context.Context, *entity.SendGroupMsgReq) (*entity.SendMsgRsp, error)
	SendMsg(context.Context, *entity.SendMsgReq) (*entity.SendMsgRsp, error)
	DeleteMsg(context.Context, *entity.DeleteMsgReq) (*entity.DeleteMsgRsp, error)
	GetMsg(context.Context, *entity.GetMsgReq) (*entity.GetMsgRsp, error)
	GetForwardMsg(context.Context, *entity.GetForwardMsgReq) (*entity.GetForwardMsgRsp, error)
	SendLike(context.Context, *entity.SendLikeReq) (*entity.SendLikeRsp, error)
	SetGroupKick(context.Context, *entity.SetGroupKickReq) (*entity.SetGroupKickRsp, error)
	SetGroupBan(context.Context, *entity.SetGroupBanReq) (*entity.SetGroupBanRsp, error)
	SetGroupAnonymousBan(context.Context, *entity.SetGroupAnonymousBanReq) (*entity.SetGroupAnonymousBanRsp, error)
	SetGroupWholeBan(context.Context, *entity.SetGroupWholeBanReq) (*entity.SetGroupWholeBanRsp, error)
	SetGroupAdmin(context.Context, *entity.SetGroupAdminReq) (*entity.SetGroupAdminRsp, error)
	SetGroupAnonymous(context.Context, *entity.SetGroupAnonymousReq) (*entity.SetGroupAnonymousRsp, error)
	SetGroupCard(context.Context, *entity.SetGroupCardReq) (*entity.SetGroupCardRsp, error)
	SetGroupName(context.Context, *entity.SetGroupNameReq) (*entity.SetGroupNameRsp, error)
	SetGroupLeave(context.Context, *entity.SetGroupLeaveReq) (*entity.SetGroupLeaveRsp, error)
	SetGroupSpecialTitle(context.Context, *entity.SetGroupSpecialTitleReq) (*entity.SetGroupSpecialTitleRsp, error)
	SetGroupAddRequest(context.Context, *entity.SetGroupAddRequestReq) (*entity.SetGroupAddRequestRsp, error)
	SetFriendAddRequest(context.Context, *entity.SetFriendAddRequestReq) (*entity.SetFriendaddRequestRsp, error)
	GetLoginInfo(context.Context, *entity.GetLoginInfoReq) (*entity.GetLoginInfoRsp, error)
	GetStrangerInfo(context.Context, *entity.GetStrangerInfoReq) (*entity.GetStrangerInfoRsp, error)
	GetFriendList(context.Context, *entity.GetFriendListReq) (*entity.GetFriendListRsp, error)
	GetGroupInfo(context.Context, *entity.GetGroupInfoReq) (*entity.GetGroupInfoRsp, error)
	GetGroupList(context.Context, *entity.GetGroupListReq) (*entity.GetGroupListRsp, error)
	GetGroupMemberInfo(context.Context, *entity.GetGroupMemberInfoReq) (*entity.GetGroupMemberInfoRsp, error)
	GetGroupMemberList(context.Context, *entity.GetGroupMemberListReq) (*entity.GetGroupMemberListRsp, error)
	GetGroupHonorInfo(context.Context, *entity.GetGroupHonorInfoReq) (*entity.GetGroupHonorInfoRsp, error)
	GetCookies(context.Context, *entity.GetCookiesReq) (*entity.GetCookiesRsp, error)
	GetCsrfToken(context.Context, *entity.GetCsrfTokenReq) (*entity.GetCsrfTokenRsp, error)
	GetCredentials(context.Context, *entity.GetCredentialsReq) (*entity.GetCredentialsRsp, error)
	GetRecord(context.Context, *entity.GetRecordReq) (*entity.GetRecordRsp, error)
	GetImage(context.Context, *entity.GetImageReq) (*entity.GetImageRsp, error)
	CanSendImage(context.Context, *entity.CanSendImageReq) (*entity.CanSendImageRsp, error)
	CanSendRecord(context.Context, *entity.CanSendRecordReq) (*entity.CanSendRecordRsp, error)
	GetStatus(context.Context, *entity.GetStatusReq) (*entity.GetStatusRsp, error)
	GetVersionInfo(context.Context, *entity.GetVersionInfoReq) (*entity.GetVersionInfoRsp, error)
	SetRestart(context.Context, *entity.SetRestartReq) (*entity.SetRestartRsp, error)
	CleanCache(context.Context, *entity.CleanCacheReq) (*entity.CleanCacheRsp, error)
	// go-cqhttp 实现的一些非标准api
	CustomSetGroupPortrait(context.Context, *entity.CustomSetGroupPortraitReq) (*entity.CustomSetGroupPortraitRsp, error)
	CustomGetWordSlices(context.Context, *entity.CustomGetWordSlicesReq) (*entity.CustomGetWordSlicesRsp, error)
	CustomOcrImage(context.Context, *entity.CustomOcrImageReq) (*entity.CustomOcrImageRsp, error)
	CustomGetGroupSystemMsg(context.Context, *entity.CustomGetGroupSystemMsgReq) (*entity.CustomGetGroupSystemMsgRsp, error)
	CustomUploadGroupFile(context.Context, *entity.CustomUploadGroupFileReq) (*entity.CustomUploadGroupFileRsp, error)
	CustomGetGroupFileSystemInfo(context.Context, *entity.CustomGetGroupFileSystemInfoReq) (*entity.CustomGetGroupFileSystemInfoRsp, error)
	CustomGetGroupRootFiles(context.Context, *entity.CustomGetGroupRootFilesReq) (*entity.CustomGetGroupRootFilesRsp, error)
	CustomGetGroupFilesByFolder(context.Context, *entity.CustomGetGroupFilesByFolderReq) (*entity.CustomGetGroupFilesByFolderRsp, error)
	CustomGetGroupFileUrl(context.Context, *entity.CustomGetGroupFileUrlReq) (*entity.CustomGetGroupFileUrlRsp, error)
	CustomGetStatus(context.Context, *entity.CustomGetStatusReq) (*entity.CustomGetStatusRsp, error)
	CustomGetGroupAtAllRemain(context.Context, *entity.CustomGetGroupAtAllRemainReq) (*entity.CustomGetGroupAtAllRemainRsp, error)
	CustomGetVipInfo(context.Context, *entity.CustomGetVipInfoReq) (*entity.CustomGetVipInfoRsp, error)
	CustomSendGroupNotice(context.Context, *entity.CustomSendGroupNoticeReq) (*entity.CustomSendGroupNoticeRsp, error)
	CustomReloadEventFilter(context.Context, *entity.CustomReloadEventFilterReq) (*entity.CustomReloadEventFilterRsp, error)
	CustomDownloadFile(context.Context, *entity.CustomDownloadFileReq) (*entity.CustomDownloadFileRsp, error)
	CustomGetOnlineClinets(context.Context, *entity.CustomGetOnlineClientsReq) (*entity.CustomGetOnlineClientsRsp, error)
	CustomGetGroupMsgHistory(context.Context, *entity.CustomGetGroupMsgHistoryReq) (*entity.CustomGetGroupMsgHistoryRsp, error)
	CustomSetEssenceMsg(context.Context, *entity.CustomSetEssenceMsgReq) (*entity.CustomSetEssenceMsgRsp, error)
	CustomDeleteEssenceMsg(context.Context, *entity.CustomDeleteEssenceMsgReq) (*entity.CustomDeleteEssenceMsgRsp, error)
	CustomGetEssenceMsgList(context.Context, *entity.CustomGetEssenceMsgListReq) (*entity.CustomGetEssenceMsgListRsp, error)
	CustomCheckUrlSafely(context.Context, *entity.CustomCheckUrlSafelyReq) (*entity.CustomCheckUrlSafelyRsp, error)
	CustomGetModelShow(context.Context, *entity.CustomGetModelShowReq) (*entity.CustomGetModelShowRsp, error)
	CustomSetModelShow(context.Context, *entity.CustomSetModelShowReq) (*entity.CustomSetModelShowRsp, error)
	CustomGetMsg(context.Context, *entity.CustomGetMsgReq) (*entity.CustomGetMsgRsp, error)
	CustomGetImage(context.Context, *entity.CustomGetImageReq) (*entity.CustomGetImageRsp, error)
	CustomSendGroupForwardMsg(context.Context, *entity.CustomSendGroupForwardMsgReq) (*entity.CustomSendGroupForwardMsgRsp, error)
	CustomGetForwardMsg(context.Context, *entity.CustomGetForwardMsgReq) (*entity.CustomGetForwardMsgRsp, error)
	// 下面是bot_adapter自身的一些功能实现
	GetAuthToken(context.Context, *entity.GetAuthTokenReq) (*entity.GetAuthTokenRsp, error)
	GetConfig(context.Context, *entity.Config) (*entity.Config, error)
	UpdateConfig(context.Context, *entity.Config) (*entity.Config, error)
	SetBotAdapterKill(context.Context, *entity.SetRestartReq) (*entity.SetRestartRsp, error)
}

// UnimplementedAdapterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdapterServiceServer struct {
}

func (*UnimplementedAdapterServiceServer) SendPrivateMsg(context.Context, *entity.SendPrivateMsgReq) (*entity.SendMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPrivateMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) SendGroupMsg(context.Context, *entity.SendGroupMsgReq) (*entity.SendMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendGroupMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) SendMsg(context.Context, *entity.SendMsgReq) (*entity.SendMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) DeleteMsg(context.Context, *entity.DeleteMsgReq) (*entity.DeleteMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) GetMsg(context.Context, *entity.GetMsgReq) (*entity.GetMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) GetForwardMsg(context.Context, *entity.GetForwardMsgReq) (*entity.GetForwardMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForwardMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) SendLike(context.Context, *entity.SendLikeReq) (*entity.SendLikeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLike not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupKick(context.Context, *entity.SetGroupKickReq) (*entity.SetGroupKickRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupKick not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupBan(context.Context, *entity.SetGroupBanReq) (*entity.SetGroupBanRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupBan not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupAnonymousBan(context.Context, *entity.SetGroupAnonymousBanReq) (*entity.SetGroupAnonymousBanRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupAnonymousBan not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupWholeBan(context.Context, *entity.SetGroupWholeBanReq) (*entity.SetGroupWholeBanRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupWholeBan not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupAdmin(context.Context, *entity.SetGroupAdminReq) (*entity.SetGroupAdminRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupAdmin not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupAnonymous(context.Context, *entity.SetGroupAnonymousReq) (*entity.SetGroupAnonymousRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupAnonymous not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupCard(context.Context, *entity.SetGroupCardReq) (*entity.SetGroupCardRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupCard not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupName(context.Context, *entity.SetGroupNameReq) (*entity.SetGroupNameRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupName not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupLeave(context.Context, *entity.SetGroupLeaveReq) (*entity.SetGroupLeaveRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupLeave not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupSpecialTitle(context.Context, *entity.SetGroupSpecialTitleReq) (*entity.SetGroupSpecialTitleRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupSpecialTitle not implemented")
}
func (*UnimplementedAdapterServiceServer) SetGroupAddRequest(context.Context, *entity.SetGroupAddRequestReq) (*entity.SetGroupAddRequestRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupAddRequest not implemented")
}
func (*UnimplementedAdapterServiceServer) SetFriendAddRequest(context.Context, *entity.SetFriendAddRequestReq) (*entity.SetFriendaddRequestRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFriendAddRequest not implemented")
}
func (*UnimplementedAdapterServiceServer) GetLoginInfo(context.Context, *entity.GetLoginInfoReq) (*entity.GetLoginInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLoginInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) GetStrangerInfo(context.Context, *entity.GetStrangerInfoReq) (*entity.GetStrangerInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStrangerInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) GetFriendList(context.Context, *entity.GetFriendListReq) (*entity.GetFriendListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFriendList not implemented")
}
func (*UnimplementedAdapterServiceServer) GetGroupInfo(context.Context, *entity.GetGroupInfoReq) (*entity.GetGroupInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) GetGroupList(context.Context, *entity.GetGroupListReq) (*entity.GetGroupListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupList not implemented")
}
func (*UnimplementedAdapterServiceServer) GetGroupMemberInfo(context.Context, *entity.GetGroupMemberInfoReq) (*entity.GetGroupMemberInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupMemberInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) GetGroupMemberList(context.Context, *entity.GetGroupMemberListReq) (*entity.GetGroupMemberListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupMemberList not implemented")
}
func (*UnimplementedAdapterServiceServer) GetGroupHonorInfo(context.Context, *entity.GetGroupHonorInfoReq) (*entity.GetGroupHonorInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupHonorInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) GetCookies(context.Context, *entity.GetCookiesReq) (*entity.GetCookiesRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCookies not implemented")
}
func (*UnimplementedAdapterServiceServer) GetCsrfToken(context.Context, *entity.GetCsrfTokenReq) (*entity.GetCsrfTokenRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCsrfToken not implemented")
}
func (*UnimplementedAdapterServiceServer) GetCredentials(context.Context, *entity.GetCredentialsReq) (*entity.GetCredentialsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCredentials not implemented")
}
func (*UnimplementedAdapterServiceServer) GetRecord(context.Context, *entity.GetRecordReq) (*entity.GetRecordRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecord not implemented")
}
func (*UnimplementedAdapterServiceServer) GetImage(context.Context, *entity.GetImageReq) (*entity.GetImageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImage not implemented")
}
func (*UnimplementedAdapterServiceServer) CanSendImage(context.Context, *entity.CanSendImageReq) (*entity.CanSendImageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSendImage not implemented")
}
func (*UnimplementedAdapterServiceServer) CanSendRecord(context.Context, *entity.CanSendRecordReq) (*entity.CanSendRecordRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSendRecord not implemented")
}
func (*UnimplementedAdapterServiceServer) GetStatus(context.Context, *entity.GetStatusReq) (*entity.GetStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedAdapterServiceServer) GetVersionInfo(context.Context, *entity.GetVersionInfoReq) (*entity.GetVersionInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) SetRestart(context.Context, *entity.SetRestartReq) (*entity.SetRestartRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRestart not implemented")
}
func (*UnimplementedAdapterServiceServer) CleanCache(context.Context, *entity.CleanCacheReq) (*entity.CleanCacheRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanCache not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomSetGroupPortrait(context.Context, *entity.CustomSetGroupPortraitReq) (*entity.CustomSetGroupPortraitRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomSetGroupPortrait not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetWordSlices(context.Context, *entity.CustomGetWordSlicesReq) (*entity.CustomGetWordSlicesRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetWordSlices not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomOcrImage(context.Context, *entity.CustomOcrImageReq) (*entity.CustomOcrImageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomOcrImage not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupSystemMsg(context.Context, *entity.CustomGetGroupSystemMsgReq) (*entity.CustomGetGroupSystemMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupSystemMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomUploadGroupFile(context.Context, *entity.CustomUploadGroupFileReq) (*entity.CustomUploadGroupFileRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomUploadGroupFile not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupFileSystemInfo(context.Context, *entity.CustomGetGroupFileSystemInfoReq) (*entity.CustomGetGroupFileSystemInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupFileSystemInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupRootFiles(context.Context, *entity.CustomGetGroupRootFilesReq) (*entity.CustomGetGroupRootFilesRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupRootFiles not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupFilesByFolder(context.Context, *entity.CustomGetGroupFilesByFolderReq) (*entity.CustomGetGroupFilesByFolderRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupFilesByFolder not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupFileUrl(context.Context, *entity.CustomGetGroupFileUrlReq) (*entity.CustomGetGroupFileUrlRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupFileUrl not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetStatus(context.Context, *entity.CustomGetStatusReq) (*entity.CustomGetStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetStatus not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupAtAllRemain(context.Context, *entity.CustomGetGroupAtAllRemainReq) (*entity.CustomGetGroupAtAllRemainRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupAtAllRemain not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetVipInfo(context.Context, *entity.CustomGetVipInfoReq) (*entity.CustomGetVipInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetVipInfo not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomSendGroupNotice(context.Context, *entity.CustomSendGroupNoticeReq) (*entity.CustomSendGroupNoticeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomSendGroupNotice not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomReloadEventFilter(context.Context, *entity.CustomReloadEventFilterReq) (*entity.CustomReloadEventFilterRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomReloadEventFilter not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomDownloadFile(context.Context, *entity.CustomDownloadFileReq) (*entity.CustomDownloadFileRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomDownloadFile not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetOnlineClinets(context.Context, *entity.CustomGetOnlineClientsReq) (*entity.CustomGetOnlineClientsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetOnlineClinets not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetGroupMsgHistory(context.Context, *entity.CustomGetGroupMsgHistoryReq) (*entity.CustomGetGroupMsgHistoryRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetGroupMsgHistory not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomSetEssenceMsg(context.Context, *entity.CustomSetEssenceMsgReq) (*entity.CustomSetEssenceMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomSetEssenceMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomDeleteEssenceMsg(context.Context, *entity.CustomDeleteEssenceMsgReq) (*entity.CustomDeleteEssenceMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomDeleteEssenceMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetEssenceMsgList(context.Context, *entity.CustomGetEssenceMsgListReq) (*entity.CustomGetEssenceMsgListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetEssenceMsgList not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomCheckUrlSafely(context.Context, *entity.CustomCheckUrlSafelyReq) (*entity.CustomCheckUrlSafelyRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomCheckUrlSafely not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetModelShow(context.Context, *entity.CustomGetModelShowReq) (*entity.CustomGetModelShowRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetModelShow not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomSetModelShow(context.Context, *entity.CustomSetModelShowReq) (*entity.CustomSetModelShowRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomSetModelShow not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetMsg(context.Context, *entity.CustomGetMsgReq) (*entity.CustomGetMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetImage(context.Context, *entity.CustomGetImageReq) (*entity.CustomGetImageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetImage not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomSendGroupForwardMsg(context.Context, *entity.CustomSendGroupForwardMsgReq) (*entity.CustomSendGroupForwardMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomSendGroupForwardMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) CustomGetForwardMsg(context.Context, *entity.CustomGetForwardMsgReq) (*entity.CustomGetForwardMsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CustomGetForwardMsg not implemented")
}
func (*UnimplementedAdapterServiceServer) GetAuthToken(context.Context, *entity.GetAuthTokenReq) (*entity.GetAuthTokenRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthToken not implemented")
}
func (*UnimplementedAdapterServiceServer) GetConfig(context.Context, *entity.Config) (*entity.Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedAdapterServiceServer) UpdateConfig(context.Context, *entity.Config) (*entity.Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfig not implemented")
}
func (*UnimplementedAdapterServiceServer) SetBotAdapterKill(context.Context, *entity.SetRestartReq) (*entity.SetRestartRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBotAdapterKill not implemented")
}

func RegisterAdapterServiceServer(s *grpc.Server, srv AdapterServiceServer) {
	s.RegisterService(&_AdapterService_serviceDesc, srv)
}

func _AdapterService_SendPrivateMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SendPrivateMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SendPrivateMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SendPrivateMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SendPrivateMsg(ctx, req.(*entity.SendPrivateMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SendGroupMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SendGroupMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SendGroupMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SendGroupMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SendGroupMsg(ctx, req.(*entity.SendGroupMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SendMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SendMsg(ctx, req.(*entity.SendMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_DeleteMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.DeleteMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).DeleteMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/DeleteMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).DeleteMsg(ctx, req.(*entity.DeleteMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetMsg(ctx, req.(*entity.GetMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetForwardMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetForwardMsg(ctx, req.(*entity.GetForwardMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SendLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SendLikeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SendLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SendLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SendLike(ctx, req.(*entity.SendLikeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupKick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupKickReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupKick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupKick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupKick(ctx, req.(*entity.SetGroupKickReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupBanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupBan(ctx, req.(*entity.SetGroupBanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupAnonymousBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupAnonymousBanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupAnonymousBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupAnonymousBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupAnonymousBan(ctx, req.(*entity.SetGroupAnonymousBanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupWholeBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupWholeBanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupWholeBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupWholeBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupWholeBan(ctx, req.(*entity.SetGroupWholeBanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupAdminReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupAdmin(ctx, req.(*entity.SetGroupAdminReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupAnonymous_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupAnonymousReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupAnonymous(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupAnonymous",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupAnonymous(ctx, req.(*entity.SetGroupAnonymousReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupCard(ctx, req.(*entity.SetGroupCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupName(ctx, req.(*entity.SetGroupNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupLeave(ctx, req.(*entity.SetGroupLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupSpecialTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupSpecialTitleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupSpecialTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupSpecialTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupSpecialTitle(ctx, req.(*entity.SetGroupSpecialTitleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetGroupAddRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetGroupAddRequestReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetGroupAddRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetGroupAddRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetGroupAddRequest(ctx, req.(*entity.SetGroupAddRequestReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetFriendAddRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetFriendAddRequestReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetFriendAddRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetFriendAddRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetFriendAddRequest(ctx, req.(*entity.SetFriendAddRequestReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetLoginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetLoginInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetLoginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetLoginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetLoginInfo(ctx, req.(*entity.GetLoginInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetStrangerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetStrangerInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetStrangerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetStrangerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetStrangerInfo(ctx, req.(*entity.GetStrangerInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetFriendListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetFriendList(ctx, req.(*entity.GetFriendListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetGroupInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetGroupInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetGroupInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetGroupInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetGroupInfo(ctx, req.(*entity.GetGroupInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetGroupListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetGroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetGroupList(ctx, req.(*entity.GetGroupListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetGroupMemberInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetGroupMemberInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetGroupMemberInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetGroupMemberInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetGroupMemberInfo(ctx, req.(*entity.GetGroupMemberInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetGroupMemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetGroupMemberListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetGroupMemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetGroupMemberList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetGroupMemberList(ctx, req.(*entity.GetGroupMemberListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetGroupHonorInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetGroupHonorInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetGroupHonorInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetGroupHonorInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetGroupHonorInfo(ctx, req.(*entity.GetGroupHonorInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetCookies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetCookiesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetCookies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetCookies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetCookies(ctx, req.(*entity.GetCookiesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetCsrfToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetCsrfTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetCsrfToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetCsrfToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetCsrfToken(ctx, req.(*entity.GetCsrfTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetCredentialsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetCredentials(ctx, req.(*entity.GetCredentialsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetRecord(ctx, req.(*entity.GetRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetImage(ctx, req.(*entity.GetImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CanSendImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CanSendImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CanSendImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CanSendImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CanSendImage(ctx, req.(*entity.CanSendImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CanSendRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CanSendRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CanSendRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CanSendRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CanSendRecord(ctx, req.(*entity.CanSendRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetStatus(ctx, req.(*entity.GetStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetVersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetVersionInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetVersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetVersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetVersionInfo(ctx, req.(*entity.GetVersionInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetRestart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetRestartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetRestart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetRestart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetRestart(ctx, req.(*entity.SetRestartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CleanCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CleanCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CleanCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CleanCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CleanCache(ctx, req.(*entity.CleanCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomSetGroupPortrait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomSetGroupPortraitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomSetGroupPortrait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomSetGroupPortrait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomSetGroupPortrait(ctx, req.(*entity.CustomSetGroupPortraitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetWordSlices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetWordSlicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetWordSlices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetWordSlices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetWordSlices(ctx, req.(*entity.CustomGetWordSlicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomOcrImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomOcrImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomOcrImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomOcrImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomOcrImage(ctx, req.(*entity.CustomOcrImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupSystemMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupSystemMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupSystemMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupSystemMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupSystemMsg(ctx, req.(*entity.CustomGetGroupSystemMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomUploadGroupFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomUploadGroupFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomUploadGroupFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomUploadGroupFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomUploadGroupFile(ctx, req.(*entity.CustomUploadGroupFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupFileSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupFileSystemInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupFileSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupFileSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupFileSystemInfo(ctx, req.(*entity.CustomGetGroupFileSystemInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupRootFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupRootFilesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupRootFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupRootFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupRootFiles(ctx, req.(*entity.CustomGetGroupRootFilesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupFilesByFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupFilesByFolderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupFilesByFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupFilesByFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupFilesByFolder(ctx, req.(*entity.CustomGetGroupFilesByFolderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupFileUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupFileUrlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupFileUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupFileUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupFileUrl(ctx, req.(*entity.CustomGetGroupFileUrlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetStatus(ctx, req.(*entity.CustomGetStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupAtAllRemain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupAtAllRemainReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupAtAllRemain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupAtAllRemain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupAtAllRemain(ctx, req.(*entity.CustomGetGroupAtAllRemainReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetVipInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetVipInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetVipInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetVipInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetVipInfo(ctx, req.(*entity.CustomGetVipInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomSendGroupNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomSendGroupNoticeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomSendGroupNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomSendGroupNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomSendGroupNotice(ctx, req.(*entity.CustomSendGroupNoticeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomReloadEventFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomReloadEventFilterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomReloadEventFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomReloadEventFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomReloadEventFilter(ctx, req.(*entity.CustomReloadEventFilterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomDownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomDownloadFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomDownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomDownloadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomDownloadFile(ctx, req.(*entity.CustomDownloadFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetOnlineClinets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetOnlineClientsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetOnlineClinets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetOnlineClinets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetOnlineClinets(ctx, req.(*entity.CustomGetOnlineClientsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetGroupMsgHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetGroupMsgHistoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetGroupMsgHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetGroupMsgHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetGroupMsgHistory(ctx, req.(*entity.CustomGetGroupMsgHistoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomSetEssenceMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomSetEssenceMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomSetEssenceMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomSetEssenceMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomSetEssenceMsg(ctx, req.(*entity.CustomSetEssenceMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomDeleteEssenceMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomDeleteEssenceMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomDeleteEssenceMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomDeleteEssenceMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomDeleteEssenceMsg(ctx, req.(*entity.CustomDeleteEssenceMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetEssenceMsgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetEssenceMsgListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetEssenceMsgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetEssenceMsgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetEssenceMsgList(ctx, req.(*entity.CustomGetEssenceMsgListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomCheckUrlSafely_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomCheckUrlSafelyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomCheckUrlSafely(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomCheckUrlSafely",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomCheckUrlSafely(ctx, req.(*entity.CustomCheckUrlSafelyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetModelShow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetModelShowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetModelShow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetModelShow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetModelShow(ctx, req.(*entity.CustomGetModelShowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomSetModelShow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomSetModelShowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomSetModelShow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomSetModelShow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomSetModelShow(ctx, req.(*entity.CustomSetModelShowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetMsg(ctx, req.(*entity.CustomGetMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetImage(ctx, req.(*entity.CustomGetImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomSendGroupForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomSendGroupForwardMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomSendGroupForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomSendGroupForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomSendGroupForwardMsg(ctx, req.(*entity.CustomSendGroupForwardMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_CustomGetForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.CustomGetForwardMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).CustomGetForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/CustomGetForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).CustomGetForwardMsg(ctx, req.(*entity.CustomGetForwardMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetAuthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.GetAuthTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetAuthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetAuthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetAuthToken(ctx, req.(*entity.GetAuthTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).GetConfig(ctx, req.(*entity.Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_UpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).UpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/UpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).UpdateConfig(ctx, req.(*entity.Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdapterService_SetBotAdapterKill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(entity.SetRestartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServiceServer).SetBotAdapterKill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdapterService/SetBotAdapterKill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServiceServer).SetBotAdapterKill(ctx, req.(*entity.SetRestartReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdapterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.AdapterService",
	HandlerType: (*AdapterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPrivateMsg",
			Handler:    _AdapterService_SendPrivateMsg_Handler,
		},
		{
			MethodName: "SendGroupMsg",
			Handler:    _AdapterService_SendGroupMsg_Handler,
		},
		{
			MethodName: "SendMsg",
			Handler:    _AdapterService_SendMsg_Handler,
		},
		{
			MethodName: "DeleteMsg",
			Handler:    _AdapterService_DeleteMsg_Handler,
		},
		{
			MethodName: "GetMsg",
			Handler:    _AdapterService_GetMsg_Handler,
		},
		{
			MethodName: "GetForwardMsg",
			Handler:    _AdapterService_GetForwardMsg_Handler,
		},
		{
			MethodName: "SendLike",
			Handler:    _AdapterService_SendLike_Handler,
		},
		{
			MethodName: "SetGroupKick",
			Handler:    _AdapterService_SetGroupKick_Handler,
		},
		{
			MethodName: "SetGroupBan",
			Handler:    _AdapterService_SetGroupBan_Handler,
		},
		{
			MethodName: "SetGroupAnonymousBan",
			Handler:    _AdapterService_SetGroupAnonymousBan_Handler,
		},
		{
			MethodName: "SetGroupWholeBan",
			Handler:    _AdapterService_SetGroupWholeBan_Handler,
		},
		{
			MethodName: "SetGroupAdmin",
			Handler:    _AdapterService_SetGroupAdmin_Handler,
		},
		{
			MethodName: "SetGroupAnonymous",
			Handler:    _AdapterService_SetGroupAnonymous_Handler,
		},
		{
			MethodName: "SetGroupCard",
			Handler:    _AdapterService_SetGroupCard_Handler,
		},
		{
			MethodName: "SetGroupName",
			Handler:    _AdapterService_SetGroupName_Handler,
		},
		{
			MethodName: "SetGroupLeave",
			Handler:    _AdapterService_SetGroupLeave_Handler,
		},
		{
			MethodName: "SetGroupSpecialTitle",
			Handler:    _AdapterService_SetGroupSpecialTitle_Handler,
		},
		{
			MethodName: "SetGroupAddRequest",
			Handler:    _AdapterService_SetGroupAddRequest_Handler,
		},
		{
			MethodName: "SetFriendAddRequest",
			Handler:    _AdapterService_SetFriendAddRequest_Handler,
		},
		{
			MethodName: "GetLoginInfo",
			Handler:    _AdapterService_GetLoginInfo_Handler,
		},
		{
			MethodName: "GetStrangerInfo",
			Handler:    _AdapterService_GetStrangerInfo_Handler,
		},
		{
			MethodName: "GetFriendList",
			Handler:    _AdapterService_GetFriendList_Handler,
		},
		{
			MethodName: "GetGroupInfo",
			Handler:    _AdapterService_GetGroupInfo_Handler,
		},
		{
			MethodName: "GetGroupList",
			Handler:    _AdapterService_GetGroupList_Handler,
		},
		{
			MethodName: "GetGroupMemberInfo",
			Handler:    _AdapterService_GetGroupMemberInfo_Handler,
		},
		{
			MethodName: "GetGroupMemberList",
			Handler:    _AdapterService_GetGroupMemberList_Handler,
		},
		{
			MethodName: "GetGroupHonorInfo",
			Handler:    _AdapterService_GetGroupHonorInfo_Handler,
		},
		{
			MethodName: "GetCookies",
			Handler:    _AdapterService_GetCookies_Handler,
		},
		{
			MethodName: "GetCsrfToken",
			Handler:    _AdapterService_GetCsrfToken_Handler,
		},
		{
			MethodName: "GetCredentials",
			Handler:    _AdapterService_GetCredentials_Handler,
		},
		{
			MethodName: "GetRecord",
			Handler:    _AdapterService_GetRecord_Handler,
		},
		{
			MethodName: "GetImage",
			Handler:    _AdapterService_GetImage_Handler,
		},
		{
			MethodName: "CanSendImage",
			Handler:    _AdapterService_CanSendImage_Handler,
		},
		{
			MethodName: "CanSendRecord",
			Handler:    _AdapterService_CanSendRecord_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _AdapterService_GetStatus_Handler,
		},
		{
			MethodName: "GetVersionInfo",
			Handler:    _AdapterService_GetVersionInfo_Handler,
		},
		{
			MethodName: "SetRestart",
			Handler:    _AdapterService_SetRestart_Handler,
		},
		{
			MethodName: "CleanCache",
			Handler:    _AdapterService_CleanCache_Handler,
		},
		{
			MethodName: "CustomSetGroupPortrait",
			Handler:    _AdapterService_CustomSetGroupPortrait_Handler,
		},
		{
			MethodName: "CustomGetWordSlices",
			Handler:    _AdapterService_CustomGetWordSlices_Handler,
		},
		{
			MethodName: "CustomOcrImage",
			Handler:    _AdapterService_CustomOcrImage_Handler,
		},
		{
			MethodName: "CustomGetGroupSystemMsg",
			Handler:    _AdapterService_CustomGetGroupSystemMsg_Handler,
		},
		{
			MethodName: "CustomUploadGroupFile",
			Handler:    _AdapterService_CustomUploadGroupFile_Handler,
		},
		{
			MethodName: "CustomGetGroupFileSystemInfo",
			Handler:    _AdapterService_CustomGetGroupFileSystemInfo_Handler,
		},
		{
			MethodName: "CustomGetGroupRootFiles",
			Handler:    _AdapterService_CustomGetGroupRootFiles_Handler,
		},
		{
			MethodName: "CustomGetGroupFilesByFolder",
			Handler:    _AdapterService_CustomGetGroupFilesByFolder_Handler,
		},
		{
			MethodName: "CustomGetGroupFileUrl",
			Handler:    _AdapterService_CustomGetGroupFileUrl_Handler,
		},
		{
			MethodName: "CustomGetStatus",
			Handler:    _AdapterService_CustomGetStatus_Handler,
		},
		{
			MethodName: "CustomGetGroupAtAllRemain",
			Handler:    _AdapterService_CustomGetGroupAtAllRemain_Handler,
		},
		{
			MethodName: "CustomGetVipInfo",
			Handler:    _AdapterService_CustomGetVipInfo_Handler,
		},
		{
			MethodName: "CustomSendGroupNotice",
			Handler:    _AdapterService_CustomSendGroupNotice_Handler,
		},
		{
			MethodName: "CustomReloadEventFilter",
			Handler:    _AdapterService_CustomReloadEventFilter_Handler,
		},
		{
			MethodName: "CustomDownloadFile",
			Handler:    _AdapterService_CustomDownloadFile_Handler,
		},
		{
			MethodName: "CustomGetOnlineClinets",
			Handler:    _AdapterService_CustomGetOnlineClinets_Handler,
		},
		{
			MethodName: "CustomGetGroupMsgHistory",
			Handler:    _AdapterService_CustomGetGroupMsgHistory_Handler,
		},
		{
			MethodName: "CustomSetEssenceMsg",
			Handler:    _AdapterService_CustomSetEssenceMsg_Handler,
		},
		{
			MethodName: "CustomDeleteEssenceMsg",
			Handler:    _AdapterService_CustomDeleteEssenceMsg_Handler,
		},
		{
			MethodName: "CustomGetEssenceMsgList",
			Handler:    _AdapterService_CustomGetEssenceMsgList_Handler,
		},
		{
			MethodName: "CustomCheckUrlSafely",
			Handler:    _AdapterService_CustomCheckUrlSafely_Handler,
		},
		{
			MethodName: "CustomGetModelShow",
			Handler:    _AdapterService_CustomGetModelShow_Handler,
		},
		{
			MethodName: "CustomSetModelShow",
			Handler:    _AdapterService_CustomSetModelShow_Handler,
		},
		{
			MethodName: "CustomGetMsg",
			Handler:    _AdapterService_CustomGetMsg_Handler,
		},
		{
			MethodName: "CustomGetImage",
			Handler:    _AdapterService_CustomGetImage_Handler,
		},
		{
			MethodName: "CustomSendGroupForwardMsg",
			Handler:    _AdapterService_CustomSendGroupForwardMsg_Handler,
		},
		{
			MethodName: "CustomGetForwardMsg",
			Handler:    _AdapterService_CustomGetForwardMsg_Handler,
		},
		{
			MethodName: "GetAuthToken",
			Handler:    _AdapterService_GetAuthToken_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _AdapterService_GetConfig_Handler,
		},
		{
			MethodName: "UpdateConfig",
			Handler:    _AdapterService_UpdateConfig_Handler,
		},
		{
			MethodName: "SetBotAdapterKill",
			Handler:    _AdapterService_SetBotAdapterKill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/adapterserver.proto",
}
